AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Stack created alert from aws resource to SNS and then to Lambda and then to Slack  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Parameters:
  slackurl:
    Type: String

Resources:
  SlackAlertTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: SlackAlertTopic
  SlackAlertFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      FunctionName: SNSLambda
      Role: !GetAtt SlackAlertFunctionRole.Arn
      Environment:
        Variables:
          SLACK_URL: !Ref slackurl
      Events:        
        SNSTopicEvent:
          Type: SNS
          Properties:
            Topic: !Ref SlackAlertTopic
  SlackAlertFunctionRole:
      Type: AWS::IAM::Role
      Properties:
         AssumeRolePolicyDocument:
            Version: '2012-10-17'
            Statement:
               - Effect: Allow
                 Principal:
                    Service: lambda.amazonaws.com
                 Action: sts:AssumeRole
         ManagedPolicyArns:
            - arn:aws:iam::aws:policy/AWSLambdaExecute
  permission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt SlackAlertFunction.Arn
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
Outputs:  
  SlackAlertFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt SlackAlertFunction.Arn
  SlackAlertFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt SlackAlertFunctionRole.Arn
